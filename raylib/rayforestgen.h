// Copyright (c) 2020
// Commonwealth Scientific and Industrial Research Organisation (CSIRO)
// ABN 41 687 119 230
//
// Author: Thomas Lowe
#ifndef RAYLIB_RAYFORESTGEN_H
#define RAYLIB_RAYFORESTGEN_H

#include "raylib/raylibconfig.h"

#include "rayutils.h"
#include "raytreegen.h"

namespace ray
{
/// Forest ray cloud generation class. This generates a realistic random distribution of trees, each of which
/// has the attributes of a ray cloud. The random distribution can be seeded using @c srand()
struct RAYLIB_EXPORT ForestGen
{
  /// makes the forest geometry
  void make(double random_factor = 0.0);
  /// converts the forest geometry into a set of rays, for a chosen @c ray_density
  void generateRays(double ray_density);

  /// returns just the leaf points of the forest
  std::vector<Eigen::Vector3d> getCanopy();
  
  /// returns the point cloud generated by @c generateRays
  std::vector<Eigen::Vector3d> getPointCloud();

  /// the set of trees
  std::vector<TreeGen> &trees(){ return trees_; }
  const std::vector<TreeGen> &trees() const { return trees_; }
private:
  std::vector<TreeGen> trees_;
};
}  // namespace ray

#endif  // RAYLIB_RAYFORESTGEN_H
